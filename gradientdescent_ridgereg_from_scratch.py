# -*- coding: utf-8 -*-
"""GradientDescent_RidgeReg_from_scratch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xcjCj8j3aylBQkJI7Ty5L80-3GmJI4po
"""

import numpy as np

class RidgeRegGD:
  def __init__(self, alph=0.01,epoch=300,lr=0.8):
    self.alpha=alph #hyperparameter: Default value is set to be 0.01
    self.coef=None
    self.intercept=None
    self.lr=lr
    self.epoch=epoch
  def train(self,x,y):
    n=x.shape[0]
    self.intercept=0
    cols=x.shape[1]
    self.coef=np.ones(cols)
    for i in range(self.epoch):
      y_pred=self.intercept+np.dot(x,self.coef)
      #update all the coefs and the intercept
      slope_intercept=-2*(np.mean(y-y_pred))
      self.intercept=self.intercept-self.lr*slope_intercept
      slope_coefs=-2*(np.dot(x.T,(y-y_pred)))/n +2*self.alpha*self.coef
      self.coef=self.coef-self.lr*slope_coefs
  def predict(self,x):
    return self.intercept+np.dot(x,self.coef)

from sklearn.datasets import load_diabetes

x,y=load_diabetes(return_X_y=True)
print(x.shape,x,"\n",y.shape,y)

import pandas as pd
from sklearn.linear_model import Ridge
from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=12)

model = Ridge(alpha=0.01)
model.fit(x_train,y_train)

from sklearn.metrics import r2_score

model.intercept_

model.coef_

r2_score(y_test,model.predict(x_test))

Ridge=RidgeRegGD()

Ridge.train(x_train,y_train)

Ridge.coef

y_pred=Ridge.predict(x_test)
y_pred

r2_score(y_test,y_pred)

